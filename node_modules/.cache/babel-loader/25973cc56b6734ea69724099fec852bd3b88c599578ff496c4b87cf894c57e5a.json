{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/**\n * See <a href=\"https://www.contentful.com/developers/docs/concepts/sync/\">Synchronization</a> for more information.\n * @namespace Sync\n */\nimport { createRequestConfig, freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport resolveResponse from 'contentful-resolve-response';\nimport mixinStringifySafe from './mixins/stringify-safe';\n\n/**\n * @memberof Sync\n * @typedef SyncCollection\n * @prop {Array<Entities.Entry>} entries - All existing entries on first sync. New and updated entries on subsequent syncs.\n * @prop {Array<Entities.Asset>} assets - All existing assets on first sync. New and updated assets on subsequent syncs.\n * @prop {Array<Sync.DeletedEntry>} deletedEntries - List of deleted Entries since last sync\n * @prop {Array<Sync.DeletedAsset>} deletedAssets - List of deleted Assets since last sync\n * @prop {string} nextSyncToken - Token to be sent to the next sync call\n * @prop {function(): Object} toPlainObject() - Returns this Sync collection as a plain JS object\n * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the Sync collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take.\n */\n\n/**\n * Deleted Entries are the same as Entries, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedEntry\n * @type Entities.Entry\n */\n\n/**\n * Deleted Assets are the same as Assets, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedAsset\n * @type Entities.Asset\n */\n\n/**\n * This module retrieves all the available pages for a sync operation\n * @private\n * @param {Object} http - HTTP client\n * @param {Object} query - Query object\n * @param {Object} options - Sync options object\n * @param {boolean} [options.resolveLinks = true] - If links should be resolved\n * @param {boolean} [options.removeUnresolved = false] - If unresolvable links should get removed\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<SyncCollection>}\n */\nexport default async function pagedSync(http, query) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!query || !query.initial && !query.nextSyncToken && !query.nextPageToken) {\n    throw new Error('Please provide one of `initial`, `nextSyncToken` or `nextPageToken` parameters for syncing');\n  }\n  if (query && query.content_type && !query.type) {\n    query.type = 'Entry';\n  } else if (query && query.content_type && query.type && query.type !== 'Entry') {\n    throw new Error('When using the `content_type` filter your `type` parameter cannot be different from `Entry`.');\n  }\n  const defaultOptions = {\n    resolveLinks: true,\n    removeUnresolved: false,\n    paginate: true\n  };\n  const {\n    resolveLinks,\n    removeUnresolved,\n    paginate\n  } = _objectSpread(_objectSpread({}, defaultOptions), options);\n  const syncOptions = {\n    paginate\n  };\n  const response = await getSyncPage(http, [], query, syncOptions);\n  // clones response.items used in includes because we don't want these to be mutated\n  if (resolveLinks) {\n    response.items = resolveResponse(response, {\n      removeUnresolved,\n      itemEntryPoints: ['fields']\n    });\n  }\n  // maps response items again after getters are attached\n  const mappedResponseItems = mapResponseItems(response.items);\n  if (response.nextSyncToken) {\n    mappedResponseItems.nextSyncToken = response.nextSyncToken;\n  }\n  if (response.nextPageToken) {\n    mappedResponseItems.nextPageToken = response.nextPageToken;\n  }\n  return freezeSys(mixinStringifySafe(toPlainObject(mappedResponseItems)));\n}\n\n/**\n * @private\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @return {Object} Entities mapped to an object for each entity type\n */\nfunction mapResponseItems(items) {\n  const reducer = type => {\n    return (accumulated, item) => {\n      if (item.sys.type === type) {\n        accumulated.push(toPlainObject(item));\n      }\n      return accumulated;\n    };\n  };\n  return {\n    entries: items.reduce(reducer('Entry'), []),\n    assets: items.reduce(reducer('Asset'), []),\n    deletedEntries: items.reduce(reducer('DeletedEntry'), []),\n    deletedAssets: items.reduce(reducer('DeletedAsset'), [])\n  };\n}\n\n/**\n * If the response contains a nextPageUrl, extracts the sync token to get the\n * next page and calls itself again with that token.\n * Otherwise, if the response contains a nextSyncUrl, extracts the sync token\n * and returns it.\n * On each call of this function, any retrieved items are collected in the\n * supplied items array, which gets returned in the end\n * @private\n * @param {Object} http\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @param {Object} query\n * @param {Object} options - Sync page options object\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<{items: Array, nextSyncToken: string}>}\n */\nasync function getSyncPage(http, items, query, _ref) {\n  let {\n    paginate\n  } = _ref;\n  if (query.nextSyncToken) {\n    query.sync_token = query.nextSyncToken;\n    delete query.nextSyncToken;\n  }\n  if (query.nextPageToken) {\n    query.sync_token = query.nextPageToken;\n    delete query.nextPageToken;\n  }\n  if (query.sync_token) {\n    delete query.initial;\n    delete query.type;\n    delete query.content_type;\n    delete query.limit;\n  }\n  const response = await http.get('sync', createRequestConfig({\n    query: query\n  }));\n  const data = response.data || {};\n  items = items.concat(data.items || []);\n  if (data.nextPageUrl) {\n    if (paginate) {\n      delete query.initial;\n      query.sync_token = getToken(data.nextPageUrl);\n      return getSyncPage(http, items, query, {\n        paginate\n      });\n    }\n    return {\n      items: items,\n      nextPageToken: getToken(data.nextPageUrl)\n    };\n  } else if (data.nextSyncUrl) {\n    return {\n      items: items,\n      nextSyncToken: getToken(data.nextSyncUrl)\n    };\n  } else {\n    return {\n      items: []\n    };\n  }\n}\n\n/**\n * Extracts token out of an url\n * @private\n */\nfunction getToken(url) {\n  const urlParts = url.split('?');\n  return urlParts.length > 0 ? urlParts[1].replace('sync_token=', '') : '';\n}","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","createRequestConfig","freezeSys","toPlainObject","resolveResponse","mixinStringifySafe","pagedSync","http","query","options","initial","nextSyncToken","nextPageToken","Error","content_type","type","defaultOptions","resolveLinks","removeUnresolved","paginate","syncOptions","response","getSyncPage","items","itemEntryPoints","mappedResponseItems","mapResponseItems","reducer","accumulated","item","sys","entries","reduce","assets","deletedEntries","deletedAssets","_ref","sync_token","limit","get","data","concat","nextPageUrl","getToken","nextSyncUrl","url","urlParts","split","replace"],"sources":["/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/node_modules/contentful/dist/es-modules/paged-sync.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * See <a href=\"https://www.contentful.com/developers/docs/concepts/sync/\">Synchronization</a> for more information.\n * @namespace Sync\n */\nimport { createRequestConfig, freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport resolveResponse from 'contentful-resolve-response';\nimport mixinStringifySafe from './mixins/stringify-safe';\n\n/**\n * @memberof Sync\n * @typedef SyncCollection\n * @prop {Array<Entities.Entry>} entries - All existing entries on first sync. New and updated entries on subsequent syncs.\n * @prop {Array<Entities.Asset>} assets - All existing assets on first sync. New and updated assets on subsequent syncs.\n * @prop {Array<Sync.DeletedEntry>} deletedEntries - List of deleted Entries since last sync\n * @prop {Array<Sync.DeletedAsset>} deletedAssets - List of deleted Assets since last sync\n * @prop {string} nextSyncToken - Token to be sent to the next sync call\n * @prop {function(): Object} toPlainObject() - Returns this Sync collection as a plain JS object\n * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the Sync collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take.\n */\n\n/**\n * Deleted Entries are the same as Entries, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedEntry\n * @type Entities.Entry\n */\n\n/**\n * Deleted Assets are the same as Assets, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedAsset\n * @type Entities.Asset\n */\n\n/**\n * This module retrieves all the available pages for a sync operation\n * @private\n * @param {Object} http - HTTP client\n * @param {Object} query - Query object\n * @param {Object} options - Sync options object\n * @param {boolean} [options.resolveLinks = true] - If links should be resolved\n * @param {boolean} [options.removeUnresolved = false] - If unresolvable links should get removed\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<SyncCollection>}\n */\nexport default async function pagedSync(http, query) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!query || !query.initial && !query.nextSyncToken && !query.nextPageToken) {\n    throw new Error('Please provide one of `initial`, `nextSyncToken` or `nextPageToken` parameters for syncing');\n  }\n  if (query && query.content_type && !query.type) {\n    query.type = 'Entry';\n  } else if (query && query.content_type && query.type && query.type !== 'Entry') {\n    throw new Error('When using the `content_type` filter your `type` parameter cannot be different from `Entry`.');\n  }\n  const defaultOptions = {\n    resolveLinks: true,\n    removeUnresolved: false,\n    paginate: true\n  };\n  const {\n    resolveLinks,\n    removeUnresolved,\n    paginate\n  } = _objectSpread(_objectSpread({}, defaultOptions), options);\n  const syncOptions = {\n    paginate\n  };\n  const response = await getSyncPage(http, [], query, syncOptions);\n  // clones response.items used in includes because we don't want these to be mutated\n  if (resolveLinks) {\n    response.items = resolveResponse(response, {\n      removeUnresolved,\n      itemEntryPoints: ['fields']\n    });\n  }\n  // maps response items again after getters are attached\n  const mappedResponseItems = mapResponseItems(response.items);\n  if (response.nextSyncToken) {\n    mappedResponseItems.nextSyncToken = response.nextSyncToken;\n  }\n  if (response.nextPageToken) {\n    mappedResponseItems.nextPageToken = response.nextPageToken;\n  }\n  return freezeSys(mixinStringifySafe(toPlainObject(mappedResponseItems)));\n}\n\n/**\n * @private\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @return {Object} Entities mapped to an object for each entity type\n */\nfunction mapResponseItems(items) {\n  const reducer = type => {\n    return (accumulated, item) => {\n      if (item.sys.type === type) {\n        accumulated.push(toPlainObject(item));\n      }\n      return accumulated;\n    };\n  };\n  return {\n    entries: items.reduce(reducer('Entry'), []),\n    assets: items.reduce(reducer('Asset'), []),\n    deletedEntries: items.reduce(reducer('DeletedEntry'), []),\n    deletedAssets: items.reduce(reducer('DeletedAsset'), [])\n  };\n}\n\n/**\n * If the response contains a nextPageUrl, extracts the sync token to get the\n * next page and calls itself again with that token.\n * Otherwise, if the response contains a nextSyncUrl, extracts the sync token\n * and returns it.\n * On each call of this function, any retrieved items are collected in the\n * supplied items array, which gets returned in the end\n * @private\n * @param {Object} http\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @param {Object} query\n * @param {Object} options - Sync page options object\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<{items: Array, nextSyncToken: string}>}\n */\nasync function getSyncPage(http, items, query, _ref) {\n  let {\n    paginate\n  } = _ref;\n  if (query.nextSyncToken) {\n    query.sync_token = query.nextSyncToken;\n    delete query.nextSyncToken;\n  }\n  if (query.nextPageToken) {\n    query.sync_token = query.nextPageToken;\n    delete query.nextPageToken;\n  }\n  if (query.sync_token) {\n    delete query.initial;\n    delete query.type;\n    delete query.content_type;\n    delete query.limit;\n  }\n  const response = await http.get('sync', createRequestConfig({\n    query: query\n  }));\n  const data = response.data || {};\n  items = items.concat(data.items || []);\n  if (data.nextPageUrl) {\n    if (paginate) {\n      delete query.initial;\n      query.sync_token = getToken(data.nextPageUrl);\n      return getSyncPage(http, items, query, {\n        paginate\n      });\n    }\n    return {\n      items: items,\n      nextPageToken: getToken(data.nextPageUrl)\n    };\n  } else if (data.nextSyncUrl) {\n    return {\n      items: items,\n      nextSyncToken: getToken(data.nextSyncUrl)\n    };\n  } else {\n    return {\n      items: []\n    };\n  }\n}\n\n/**\n * Extracts token out of an url\n * @private\n */\nfunction getToken(url) {\n  const urlParts = url.split('?');\n  return urlParts.length > 0 ? urlParts[1].replace('sync_token=', '') : '';\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}