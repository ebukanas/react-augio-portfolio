{"ast":null,"code":"var _jsxFileName = \"/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/workpreview.js\",\n  _s = $RefreshSig$();\nimport { Works } from \"../data\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkPreview = () => {\n  _s();\n  // seperated works into two categories: digital and physical.\n  // two buttons will trigger whichever ones will be displayed \n  const [typeOfWork, setChangeWorkDisplay] = useState('physical');\n  const [selectedButton, setSelectedButton] = useState('physical');\n  const changeToPhysical = () => {\n    setChangeWorkDisplay('physical');\n    setSelectedButton('physical');\n  };\n  const changeToDigital = () => {\n    setChangeWorkDisplay('digital');\n    setSelectedButton('digital');\n  };\n\n  // this function triggers button style based on which ever one is active\n  const getClassNames = (selectedButton, buttonType) => {\n    if (selectedButton === buttonType) {\n      return 'border-black border-b-2 text-gray-800';\n    } else {\n      return 'border-transparent border-b-0 text-gray-400';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-20 w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-futura text-center\",\n      children: \"\\u017Di\\u016Br\\u0117ti kitus:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-evenly font-futura text-[0.7em] mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeToPhysical,\n        className: `${getClassNames(selectedButton, 'physical')} duration-200 md:px-3 md:pb-1`,\n        children: \"AP\\u010CIUOPIAMI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeToDigital,\n        className: `${getClassNames(selectedButton, 'digital')} duration-200 md:px-3 md:pb-1`,\n        children: \"SKAITMENINIAI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), Works.filter(workItem => workItem[typeOfWork]).map(workItem => {\n      const img = {\n        backgroundImage: 'url(' + workItem.img1 + ')'\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: workItem.title\n        }, workItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: img,\n          className: \"h-10 w-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkPreview, \"6NgLYHGEVi9emnZPzbzvq6vxhM8=\");\n_c = WorkPreview;\nexport default WorkPreview;\nvar _c;\n$RefreshReg$(_c, \"WorkPreview\");","map":{"version":3,"names":["Works","useState","WorkPreview","typeOfWork","setChangeWorkDisplay","selectedButton","setSelectedButton","changeToPhysical","changeToDigital","getClassNames","buttonType","filter","workItem","map","img","backgroundImage","img1","title","id"],"sources":["/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/workpreview.js"],"sourcesContent":["import { Works } from \"../data\"\nimport { useState } from \"react\";\n\n\n\n\nconst WorkPreview = () => {\n\n// seperated works into two categories: digital and physical.\n// two buttons will trigger whichever ones will be displayed \nconst [typeOfWork, setChangeWorkDisplay] = useState('physical');\nconst [selectedButton, setSelectedButton] = useState('physical');\nconst changeToPhysical = () => {\n    setChangeWorkDisplay('physical');\n    setSelectedButton('physical');\n}\nconst changeToDigital = () => {\n    setChangeWorkDisplay('digital');\n    setSelectedButton('digital');\n}\n\n// this function triggers button style based on which ever one is active\nconst getClassNames = (selectedButton, buttonType) => {\n    if (selectedButton === buttonType) {\n        return 'border-black border-b-2 text-gray-800';\n    } else {\n        return 'border-transparent border-b-0 text-gray-400';\n    }\n};\n\n\n\n  return (\n    <div className=\"h-20 w-full\">\n    <h1 className=\"font-futura text-center\">Žiūrėti kitus:</h1>\n        <div className=\"flex justify-evenly font-futura text-[0.7em] mt-2\">\n            <button \n            onClick={changeToPhysical} \n            className={`${getClassNames(selectedButton, 'physical')} duration-200 md:px-3 md:pb-1`}>APČIUOPIAMI</button>\n\n            <button \n            onClick={changeToDigital} \n            className={`${getClassNames(selectedButton, 'digital')} duration-200 md:px-3 md:pb-1`}>SKAITMENINIAI</button>\n        </div>\n\n    {Works.\n    filter((workItem) => workItem[typeOfWork])\n    .map((workItem) => {\n\n    const img = {\n        backgroundImage: 'url(' + workItem.img1 + ')',\n    };\n\n        return (\n        <div>\n            <h1 key={workItem.id}>{workItem.title}</h1>\n            <div style={img} className=\"h-10 w-10\"></div>\n        </div>\n        )\n    })}\n    </div>\n  )\n}\nexport default WorkPreview"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,SAAS;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAKjC,MAAMC,WAAW,GAAG,MAAM;EAAA;EAE1B;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,oBAAoB,CAAC,GAAGH,QAAQ,CAAC,UAAU,CAAC;EAC/D,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,UAAU,CAAC;EAChE,MAAMM,gBAAgB,GAAG,MAAM;IAC3BH,oBAAoB,CAAC,UAAU,CAAC;IAChCE,iBAAiB,CAAC,UAAU,CAAC;EACjC,CAAC;EACD,MAAME,eAAe,GAAG,MAAM;IAC1BJ,oBAAoB,CAAC,SAAS,CAAC;IAC/BE,iBAAiB,CAAC,SAAS,CAAC;EAChC,CAAC;;EAED;EACA,MAAMG,aAAa,GAAG,CAACJ,cAAc,EAAEK,UAAU,KAAK;IAClD,IAAIL,cAAc,KAAKK,UAAU,EAAE;MAC/B,OAAO,uCAAuC;IAClD,CAAC,MAAM;MACH,OAAO,6CAA6C;IACxD;EACJ,CAAC;EAIC,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC5B;MAAI,SAAS,EAAC,yBAAyB;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eACvD;MAAK,SAAS,EAAC,mDAAmD;MAAA,wBAC9D;QACA,OAAO,EAAEH,gBAAiB;QAC1B,SAAS,EAAG,GAAEE,aAAa,CAACJ,cAAc,EAAE,UAAU,CAAE,+BAA+B;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS,eAE5G;QACA,OAAO,EAAEG,eAAgB;QACzB,SAAS,EAAG,GAAEC,aAAa,CAACJ,cAAc,EAAE,SAAS,CAAE,+BAA+B;QAAA,UAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3G,EAETL,KAAK,CACNW,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACT,UAAU,CAAC,CAAC,CACzCU,GAAG,CAAED,QAAQ,IAAK;MAEnB,MAAME,GAAG,GAAG;QACRC,eAAe,EAAE,MAAM,GAAGH,QAAQ,CAACI,IAAI,GAAG;MAC9C,CAAC;MAEG,oBACA;QAAA,wBACI;UAAA,UAAuBJ,QAAQ,CAACK;QAAK,GAA5BL,QAAQ,CAACM,EAAE;UAAA;UAAA;UAAA;QAAA,QAAuB,eAC3C;UAAK,KAAK,EAAEJ,GAAI;UAAC,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3C;IAEV,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEV,CAAC;AAAA,GAxDKZ,WAAW;AAAA,KAAXA,WAAW;AAyDjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}