{"ast":null,"code":"import _slicedToArray from\"/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import { useRef } from 'react';\nimport{Works}from'../data';import{useState,useEffect}from'react';import{useNavigate}from\"react-router-dom\";import'../styles/main.css';import'../styles/tailwind.css';import React from'react';// TO DO:\n//add hover styling\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HomePortfolio=function HomePortfolio(){// seperated works into two categories: digital and physical.\n// two buttons will trigger whichever ones will be displayed \nvar _useState=useState('physical'),_useState2=_slicedToArray(_useState,2),typeOfWork=_useState2[0],setChangeWorkDisplay=_useState2[1];var _useState3=useState('physical'),_useState4=_slicedToArray(_useState3,2),selectedButton=_useState4[0],setSelectedButton=_useState4[1];var changeToPhysical=function changeToPhysical(){setChangeWorkDisplay('physical');setSelectedButton('physical');};var changeToDigital=function changeToDigital(){setChangeWorkDisplay('digital');setSelectedButton('digital');};// completely genius function that last grid element to span 2 or 1 based on \n// whether there is an equal amount of elements or not\nvar workItemCounter=0;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),gridElementsSpan=_useState6[0],setGridElementsSpan=_useState6[1];useEffect(function(){console.log('workItemCounter % 2 is '+workItemCounter%2);if(workItemCounter%2){setGridElementsSpan(true);console.log('running setGridElementSpan(2)');}else{setGridElementsSpan(false);console.log('running setGridElementSpan(1)');}},[changeToPhysical,changeToDigital,workItemCounter]);// this function triggers button style based on which ever one is active\nvar getClassNames=function getClassNames(selectedButton,buttonType){if(selectedButton===buttonType){return'border-black border-b-2 text-gray-800';}else{return'border-transparent border-b-0 text-gray-400';}};var navigate=useNavigate();var navigateToWorkPage=function navigateToWorkPage(url){navigate(\"/workpage/\".concat(url));};return/*#__PURE__*/_jsxs(\"section\",{id:\"portfolio\",className:\"flex flex-col justify-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"h-8 w-screen text-center text-xl mb-4 mt-[40px] font-futura font-bold lg:mb-14 lg:mt-10 md:text-[2em] md:mb-10 md:mt-[20px] \",children:\"PORTFOLIO\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-futura flex justify-around mb-6 text-sm  md:text-[1rem] md:justify-center\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:changeToPhysical,className:\"\".concat(getClassNames(selectedButton,'physical'),\" duration-200 md:px-3 md:pb-1\"),children:\"AP\\u010CIUOPIAMI\"}),/*#__PURE__*/_jsx(\"button\",{onClick:changeToDigital,className:\"\".concat(getClassNames(selectedButton,'digital'),\" duration-200 md:px-3 md:pb-1\"),children:\"SKAITMENINIAI\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"h-2/3 w-auto grid grid-rows-2 grid-cols-2 gap-4 mx-4\\n            md:mx-20 md:grid-cols-[repeat(auto-fit,_minmax(0,1fr))] md:grid-rows-auto md:h-[60%]\\n            lg:h-1/2 lg:grid-rows-1\",children://typeOfWork is defined in the useState hook above. It returns a string, but [] converts it into an object property\nWorks.filter(function(workItem){return workItem[typeOfWork];}).map(function(workItem){workItemCounter++;var img={backgroundImage:'url('+workItem.img1+')'};return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(gridElementsSpan?'last:col-span-2':'last:col-span-1',\" md:last:col-span-1 md:row-span-2 cursor-pointer border-2 lg:border-[3px] border-black flex bg-cover bg-top\"),style:img,children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return navigateToWorkPage(workItem.url);},className:\"border-t-2 lg:border-t-[3px] border-black h-8 lg:h-12 w-full font-bold self-end bg-white text-xs  lg:text-base\",children:workItem.title})},workItem.id);})})]});};export default HomePortfolio;","map":{"version":3,"names":["Works","useState","useEffect","useNavigate","React","HomePortfolio","typeOfWork","setChangeWorkDisplay","selectedButton","setSelectedButton","changeToPhysical","changeToDigital","workItemCounter","gridElementsSpan","setGridElementsSpan","console","log","getClassNames","buttonType","navigate","navigateToWorkPage","url","filter","workItem","map","img","backgroundImage","img1","title","id"],"sources":["/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/home_portfolio.js"],"sourcesContent":["// import { useRef } from 'react';\nimport { Works } from '../data';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nimport '../styles/main.css';\nimport '../styles/tailwind.css';\nimport React from 'react';\n\n// TO DO:\n//add hover styling\n\nconst HomePortfolio = () => {\n\n    // seperated works into two categories: digital and physical.\n    // two buttons will trigger whichever ones will be displayed \n    const [typeOfWork, setChangeWorkDisplay] = useState('physical');\n    const [selectedButton, setSelectedButton] = useState('physical');\n    const changeToPhysical = () => {\n        setChangeWorkDisplay('physical');\n        setSelectedButton('physical');\n    }\n    const changeToDigital = () => {\n        setChangeWorkDisplay('digital');\n        setSelectedButton('digital');\n    }\n\n    // completely genius function that last grid element to span 2 or 1 based on \n    // whether there is an equal amount of elements or not\n    let workItemCounter = 0;\n    const [gridElementsSpan, setGridElementsSpan] = useState(false);\n    useEffect(() => {\n        console.log('workItemCounter % 2 is ' + workItemCounter % 2);\n        if (workItemCounter % 2) {\n            setGridElementsSpan(true);\n            console.log('running setGridElementSpan(2)');\n        } else {\n            setGridElementsSpan(false);\n            console.log('running setGridElementSpan(1)');\n        }\n    }, [changeToPhysical, changeToDigital, workItemCounter]);\n\n    // this function triggers button style based on which ever one is active\n    const getClassNames = (selectedButton, buttonType) => {\n        if (selectedButton === buttonType) {\n          return 'border-black border-b-2 text-gray-800';\n        } else {\n          return 'border-transparent border-b-0 text-gray-400';\n        }\n      };\n\n      const navigate = useNavigate();\n      const navigateToWorkPage = (url) => {\n        navigate(`/workpage/${url}`);\n      };\n\n\n  return (\n    <section \n    id=\"portfolio\" \n    className=\"flex flex-col justify-center\">\n        <h1 className=\"h-8 w-screen text-center text-xl mb-4 mt-[40px] font-futura font-bold\n        lg:mb-14 lg:mt-10\n        md:text-[2em] md:mb-10 md:mt-[20px]\n        \">PORTFOLIO</h1>\n        <div className='font-futura flex justify-around mb-6 text-sm \n        md:text-[1rem] md:justify-center'>\n            <button \n            onClick={changeToPhysical} \n            className={`${getClassNames(selectedButton, 'physical')} duration-200 md:px-3 md:pb-1`}>APÄŒIUOPIAMI</button>\n\n            <button \n            onClick={changeToDigital} \n            className={`${getClassNames(selectedButton, 'digital')} duration-200 md:px-3 md:pb-1`}>SKAITMENINIAI</button>\n        </div>\n            <div className={`h-2/3 w-auto grid grid-rows-2 grid-cols-2 gap-4 mx-4\n            md:mx-20 md:grid-cols-[repeat(auto-fit,_minmax(0,1fr))] md:grid-rows-auto md:h-[60%]\n            lg:h-1/2 lg:grid-rows-1`}>\n\n            {\n            //typeOfWork is defined in the useState hook above. It returns a string, but [] converts it into an object property\n            Works\n            .filter((workItem) => workItem[typeOfWork])\n            .map((workItem) => {\n                workItemCounter++;\n            const img = {\n                backgroundImage: 'url(' + workItem.img1 + ')',\n            };\n\n            return (\n                <div \n                key={workItem.id}\n                className={`${gridElementsSpan ? 'last:col-span-2' : 'last:col-span-1'} md:last:col-span-1 md:row-span-2 cursor-pointer border-2 lg:border-[3px] border-black flex bg-cover bg-top`}\n                style={img}>\n            <button onClick={() => navigateToWorkPage(workItem.url)}\n            className=\"border-t-2 lg:border-t-[3px] border-black h-8 lg:h-12 w-full font-bold self-end bg-white text-xs \n            lg:text-base\">{workItem.title}</button>\n                </div>\n                \n            );\n        })}\n\n            </div>\n    </section>\n  );\n  \n}\nexport default HomePortfolio"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}