{"ast":null,"code":"var _jsxFileName = \"/Users/kietasbicas/Documents/learn web dev/augio-react-version/my-app/src/components/home_portfolio.js\";\n// import { useRef } from 'react';\nimport { Works } from '../data';\nimport { useState } from 'react';\nimport '../styles/main.css';\nimport '../styles/tailwind.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePortfolio = () => {\n  var _s = $RefreshSig$();\n  const WorkTypeContext = /*#__PURE__*/React.createContext();\n\n  // const [typeOfWork, setSwapToPhysical] = useState('physical');\n  // const swapToPhysical = () => {\n  //     setSwapToPhysical('digital')\n  // }\n\n  function ChildComponent1() {\n    _s();\n    const typeOfWork = useContext(WorkTypeContext);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Type of work: \", typeOfWork]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  //   function ChildComponent2() {\n  //     const typeOfWork = useContext(WorkTypeContext);\n  //     return <div>Type of work: {typeOfWork}</div>;\n  //   }\n  _s(ChildComponent1, \"fGWP8qw71TQsk7stGS83v1SHfH0=\");\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"portfolio\",\n    className: \"flex flex-col justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h-8 w-screen text-center text-3xl lg:text-4xl lg:mb-8 mb-8 font-futura\",\n      children: \"PORTFOLIO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-futura flex justify-around mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => ChildComponent1(),\n        className: \"border-black border-b-2\",\n        children: \"AP\\u010CIUOPIAMI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-gray-500\",\n        children: \"SKAITMENINIAI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"works\",\n      className: `work-display h-2/3 lg:h-1/2 w-auto grid grid-rows-2 grid-cols-2 gap-4 mx-4\n            md:mx-20 lg:grid-rows-1 lg:grid-cols-4`,\n      children:\n      //typeOfWork is defined in the useState hook above. It returns a string, but [] convert it into an object property\n      Works.filter(workItem => workItem[typeOfWork]).map(workItem => {\n        // console.log(workItem.digital);\n        const img = {\n          backgroundImage: 'url(' + workItem.img1 + ')'\n        };\n        // console.log('test is' + test);\n        return /*#__PURE__*/_jsxDEV(WorkTypeContext.Provider, {\n          value: typeOfWork,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cursor-pointer border-2 lg:border-4 border-black flex bg-cover bg-top\",\n            style: img,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border-t-2 lg:border-t-4 border-black h-8 lg:h-12 w-full font-bold self-end bg-white text-xs  lg:text-base\",\n              children: workItem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)\n          }, workItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = HomePortfolio;\nexport default HomePortfolio;\nvar _c;\n$RefreshReg$(_c, \"HomePortfolio\");","map":{"version":3,"names":["Works","useState","React","HomePortfolio","WorkTypeContext","createContext","ChildComponent1","typeOfWork","useContext","filter","workItem","map","img","backgroundImage","img1","title","id"],"sources":["/Users/kietasbicas/Documents/learn web dev/augio-react-version/my-app/src/components/home_portfolio.js"],"sourcesContent":["// import { useRef } from 'react';\nimport { Works } from '../data';\nimport { useState } from 'react';\n\nimport '../styles/main.css';\nimport '../styles/tailwind.css';\nimport React from 'react';\n\n\n\nconst HomePortfolio = () => {\n\n    const WorkTypeContext = React.createContext();\n\n    // const [typeOfWork, setSwapToPhysical] = useState('physical');\n    // const swapToPhysical = () => {\n    //     setSwapToPhysical('digital')\n    // }\n\n    function ChildComponent1() {\n        const typeOfWork = useContext(WorkTypeContext);\n        return <div>Type of work: {typeOfWork}</div>;\n      }\n      \n    //   function ChildComponent2() {\n    //     const typeOfWork = useContext(WorkTypeContext);\n    //     return <div>Type of work: {typeOfWork}</div>;\n    //   }\n\n  return (\n    <section id=\"portfolio\" className=\"flex flex-col justify-center\">\n        <h1 className=\"h-8 w-screen text-center text-3xl lg:text-4xl lg:mb-8 mb-8 font-futura\">PORTFOLIO</h1>\n        <div className='font-futura flex justify-around mb-6'>\n            <button \n            onClick={() => ChildComponent1()}\n            className='border-black border-b-2'>APÄŒIUOPIAMI</button>\n            <button className='text-gray-500'>SKAITMENINIAI</button>\n        </div>\n            <div id=\"works\" className={`work-display h-2/3 lg:h-1/2 w-auto grid grid-rows-2 grid-cols-2 gap-4 mx-4\n            md:mx-20 lg:grid-rows-1 lg:grid-cols-4`}>\n                {/* try to change the Works array to PhysicalWorks array using a click event */}\n                {/* {Works.map((workItem) => {\n                    const { id, img1, title } = workItem\n\n                    // workaround for creating dynamic background images\n                    const img = {\n                        backgroundImage: 'url(' + img1 + ')',\n                    };\n                    return (\n                        <div \n                        key={id} \n                        className=\"cursor-pointer border-2 lg:border-4 border-black flex bg-cover bg-top\"\n                        style={img}>\n                    <button className=\"border-t-2 lg:border-t-4 border-black h-8 lg:h-12 w-full font-bold self-end bg-white text-xs \n                    lg:text-base\">{title}</button>\n                        </div>\n                    );\n                })} */}\n\n                    {\n                    //typeOfWork is defined in the useState hook above. It returns a string, but [] convert it into an object property\n                    Works\n                    .filter((workItem) => workItem[typeOfWork])\n                    .map((workItem) => {\n                        // console.log(workItem.digital);\n                    const img = {\n                        backgroundImage: 'url(' + workItem.img1 + ')',\n                    };\n                    // console.log('test is' + test);\n                    return (\n                        <WorkTypeContext.Provider value={typeOfWork}>\n                        <div \n                        key={workItem.id} \n                        className=\"cursor-pointer border-2 lg:border-4 border-black flex bg-cover bg-top\"\n                        style={img}>\n                    <button className=\"border-t-2 lg:border-t-4 border-black h-8 lg:h-12 w-full font-bold self-end bg-white text-xs \n                    lg:text-base\">{workItem.title}</button>\n                        </div>\n                        </WorkTypeContext.Provider>\n                    );\n                })}\n\n            </div>\n    </section>\n\n  );\n}\nexport default HomePortfolio"],"mappings":";AAAA;AACA,SAASA,KAAK,QAAQ,SAAS;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,oBAAoB;AAC3B,OAAO,wBAAwB;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC;AAI1B,MAAMC,aAAa,GAAG,MAAM;EAAA;EAExB,MAAMC,eAAe,gBAAGF,KAAK,CAACG,aAAa,EAAE;;EAE7C;EACA;EACA;EACA;;EAEA,SAASC,eAAe,GAAG;IAAA;IACvB,MAAMC,UAAU,GAAGC,UAAU,CAACJ,eAAe,CAAC;IAC9C,oBAAO;MAAA,WAAK,gBAAc,EAACG,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EAC9C;;EAEF;EACA;EACA;EACA;EAAA,GARSD,eAAe;EAU1B,oBACE;IAAS,EAAE,EAAC,WAAW;IAAC,SAAS,EAAC,8BAA8B;IAAA,wBAC5D;MAAI,SAAS,EAAC,wEAAwE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eACrG;MAAK,SAAS,EAAC,sCAAsC;MAAA,wBACjD;QACA,OAAO,EAAE,MAAMA,eAAe,EAAG;QACjC,SAAS,EAAC,yBAAyB;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS,eACxD;QAAQ,SAAS,EAAC,eAAe;QAAA,UAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACtD,eACF;MAAK,EAAE,EAAC,OAAO;MAAC,SAAS,EAAG;AACxC,mDAAoD;MAAA;MAqBhC;MACAN,KAAK,CACJS,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACH,UAAU,CAAC,CAAC,CAC1CI,GAAG,CAAED,QAAQ,IAAK;QACf;QACJ,MAAME,GAAG,GAAG;UACRC,eAAe,EAAE,MAAM,GAAGH,QAAQ,CAACI,IAAI,GAAG;QAC9C,CAAC;QACD;QACA,oBACI,QAAC,eAAe,CAAC,QAAQ;UAAC,KAAK,EAAEP,UAAW;UAAA,uBAC5C;YAEA,SAAS,EAAC,uEAAuE;YACjF,KAAK,EAAEK,GAAI;YAAA,uBACf;cAAQ,SAAS,EAAC,4GACL;cAAA,UAAEF,QAAQ,CAACK;YAAK;cAAA;cAAA;cAAA;YAAA;UAAU,GAJ9BL,QAAQ,CAACM,EAAE;YAAA;YAAA;YAAA;UAAA;QAKV;UAAA;UAAA;UAAA;QAAA,QACqB;MAEnC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAGd,CAAC;AAAA,KA5EKb,aAAa;AA6EnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}