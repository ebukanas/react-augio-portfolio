{"ast":null,"code":"var _jsxFileName = \"/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/pages/workpage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Outlet, Route, Router, useLocation, useParams } from \"react-router-dom\";\nimport Header from \"../components/header\";\nimport { Works } from \"../data\";\n// import './styles/main.css';\nimport { useState } from \"react\";\n\n// TO DO:\n\n// make like a carousel thingie for displaying a single workItem. \n// below it you should still see the entire \"home_portfolio\" compontent, but it should say \"See others\" instead of \"PORTFOLIO\"\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WorkPage = () => {\n  _s();\n  // const { id } = match.params;\n  // const [element] = useState(Works.find((el) => el.id === Number(id)));\n  // console.log(element.title);\n  let itemID = useParams(useLocation());\n  console.log(itemID.id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen w-screen flex flex-col align-center justify-end\",\n      children:\n      //typeOfWork is defined in the useState hook above. It returns a string, but [] converts it into an object property\n      Works.filter(workItem => workItem[typeOfWork]).map(workItem => {\n        const img = {\n          backgroundImage: 'url(' + workItem.img1 + ')'\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${gridElementsSpan ? 'last:col-span-2' : 'last:col-span-1'} md:last:col-span-1 md:row-span-2 cursor-pointer border-2 lg:border-[3px] border-black flex bg-cover bg-top`,\n          style: img,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleClick(workItem.id),\n            className: \"border-t-2 lg:border-t-[3px] border-black h-8 lg:h-12 w-full font-bold self-end bg-white text-xs  lg:text-base\",\n            children: workItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, workItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(WorkPage, \"jACTUwGwyKnH/c499W1pTUKlyWs=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = WorkPage;\nexport default WorkPage;\nvar _c;\n$RefreshReg$(_c, \"WorkPage\");","map":{"version":3,"names":["React","Outlet","Route","Router","useLocation","useParams","Header","Works","useState","WorkPage","itemID","console","log","id","filter","workItem","typeOfWork","map","img","backgroundImage","img1","gridElementsSpan","handleClick","title"],"sources":["/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/pages/workpage.js"],"sourcesContent":["import React from \"react\"\nimport { Outlet, Route, Router, useLocation, useParams } from \"react-router-dom\";\nimport Header from \"../components/header\"\nimport { Works } from \"../data\";\n// import './styles/main.css';\nimport { useState } from \"react\";\n\n\n// TO DO:\n\n// make like a carousel thingie for displaying a single workItem. \n// below it you should still see the entire \"home_portfolio\" compontent, but it should say \"See others\" instead of \"PORTFOLIO\"\n//\n\nconst WorkPage = ( ) => {\n\n    // const { id } = match.params;\n    // const [element] = useState(Works.find((el) => el.id === Number(id)));\n    // console.log(element.title);\n    let itemID = useParams(useLocation());\n    console.log(itemID.id);\n\n  return (\n    <>\n    <Header />\n    <div className=\"h-screen w-screen flex flex-col align-center justify-end\">\n\n\n            {\n            //typeOfWork is defined in the useState hook above. It returns a string, but [] converts it into an object property\n            Works\n            .filter((workItem) => workItem[typeOfWork])\n            .map((workItem) => {\n            const img = {\n                backgroundImage: 'url(' + workItem.img1 + ')',\n            };\n\n            return (\n                <div \n                key={workItem.id}\n                className={`${gridElementsSpan ? 'last:col-span-2' : 'last:col-span-1'} md:last:col-span-1 md:row-span-2 cursor-pointer border-2 lg:border-[3px] border-black flex bg-cover bg-top`}\n                style={img}>\n            <button onClick={() => handleClick(workItem.id)}\n            className=\"border-t-2 lg:border-t-[3px] border-black h-8 lg:h-12 w-full font-bold self-end bg-white text-xs \n            lg:text-base\">{workItem.title}</button>\n                </div>\n                \n            );\n        })}\n\n    \n    </div>\n    </>\n  )\n}\nexport default WorkPage\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAChF,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,KAAK,QAAQ,SAAS;AAC/B;AACA,SAASC,QAAQ,QAAQ,OAAO;;AAGhC;;AAEA;AACA;AACA;AAAA;AAAA;AAEA,MAAMC,QAAQ,GAAG,MAAO;EAAA;EAEpB;EACA;EACA;EACA,IAAIC,MAAM,GAAGL,SAAS,CAACD,WAAW,EAAE,CAAC;EACrCO,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,EAAE,CAAC;EAExB,oBACE;IAAA,wBACA,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,SAAS,EAAC,0DAA0D;MAAA;MAIjE;MACAN,KAAK,CACJO,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,UAAU,CAAC,CAAC,CAC1CC,GAAG,CAAEF,QAAQ,IAAK;QACnB,MAAMG,GAAG,GAAG;UACRC,eAAe,EAAE,MAAM,GAAGJ,QAAQ,CAACK,IAAI,GAAG;QAC9C,CAAC;QAED,oBACI;UAEA,SAAS,EAAG,GAAEC,gBAAgB,GAAG,iBAAiB,GAAG,iBAAkB,6GAA6G;UACpL,KAAK,EAAEH,GAAI;UAAA,uBACf;YAAQ,OAAO,EAAE,MAAMI,WAAW,CAACP,QAAQ,CAACF,EAAE,CAAE;YAChD,SAAS,EAAC,gHACG;YAAA,UAAEE,QAAQ,CAACQ;UAAK;YAAA;YAAA;YAAA;UAAA;QAAU,GAL9BR,QAAQ,CAACF,EAAE;UAAA;UAAA;UAAA;QAAA,QAMV;MAGd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAGA;EAAA,gBACH;AAEP,CAAC;AAAA,GAxCKJ,QAAQ;EAAA,QAKGJ,SAAS,EAACD,WAAW;AAAA;AAAA,KALhCK,QAAQ;AAyCd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}