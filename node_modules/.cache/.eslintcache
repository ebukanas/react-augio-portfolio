[{"/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/index.js":"1","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/App.js":"2","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/header.js":"3","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/hero.js":"4","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/home_portfolio.js":"5","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/data.js":"6","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/pages/workpage.js":"7","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/home.js":"8","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/workpreview.js":"9"},{"size":267,"mtime":1676370382727,"results":"10","hashOfConfig":"11"},{"size":552,"mtime":1675362582982,"results":"12","hashOfConfig":"11"},{"size":6732,"mtime":1676551235119,"results":"13","hashOfConfig":"11"},{"size":970,"mtime":1676551498612,"results":"14","hashOfConfig":"11"},{"size":4172,"mtime":1676494067298,"results":"15","hashOfConfig":"11"},{"size":3130,"mtime":1675376417205,"results":"16","hashOfConfig":"11"},{"size":2469,"mtime":1676493806055,"results":"17","hashOfConfig":"11"},{"size":432,"mtime":1676492464165,"results":"18","hashOfConfig":"11"},{"size":3053,"mtime":1676366990398,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"ki5zje",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52","usedDeprecatedRules":"23"},"/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/index.js",[],[],[],"/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/App.js",["53","54","55"],[],"import './styles/main.css';\n\nimport Header from './components/header';\nimport Hero from './components/hero';\nimport HomePortfolio from './components/home_portfolio';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\" \nimport WorkPage from './pages/workpage';\nimport Home from './components/home';\n\nfunction App() {\n\n  return (\n<>  \n  <Router>\n    <Routes>\n        <Route exact path='/' element={<Home /> } />\n        <Route path='/workpage/:id' element={<WorkPage />} />\n    </Routes>\n  </Router>\n</>\n  );\n}\n\nexport default App;\n","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/header.js",["56","57","58","59","60","61","62"],[],"import '../styles/main.css';\nimport '../styles/tailwind.css';\n\nimport { useState, useEffect } from 'react';\nimport {Route, Link, Routes, useLocation} from 'react-router-dom';\n\n\n\n//TO DO:\n//optimize images for loading\n//fix the overflow on the mobile navbar\n// maybe remove the MANO DARBAI link?\n\nconst Header = (props) => {\n\n    const {inView} = props;\n\n    //used to change the navbar background color, logo color and navbutton color\n    const [color, setColor] = useState(false)\n    const [logo, setLogo] = useState(false)\n    const [icons, setIcons] = useState(false)\n    const [mobileNavButton, setmobileNavButton] = useState(false)\n    const [mobileNavText, setmobileNavText] = useState(false)\n    // This function will be triggered every time `inView` changes.\n    // This function is used to change the header styling when it intersects with the homeportfolio page\n    useEffect(() => {\n        if (inView === true) {\n            setColor(true);\n            setLogo(true);\n            setmobileNavButton(true);\n            setmobileNavText(true);\n            setIcons(true);\n        } else {\n            setColor(false);\n            setLogo(false);\n            setmobileNavButton(false);\n            setmobileNavText(false);\n            setIcons(false);\n        }\n      }, [inView]);\n\n      // Checks if the current URL contains 'workpage' and then changes the header styles if it does\n      const URL = useLocation().pathname.toString();  \n      useEffect(() => {\n      if (URL.includes('workpage')) {\n          setColor(true);\n          setLogo(true);\n          setmobileNavButton(true);\n          setmobileNavText(true);\n          setIcons(true); \n      } else {\n        console.log('URL is not workpage. Cannot change Header styles because of this.')\n      }\n    })\n    \n    //used to toggle the menu button on mobile and open up the navigation\n    const [state, setState] = useState(\"hidden\");\n    const toggleMenu = () => {\n        console.log('menu clicked');\n        // value when opening the menu\n        if (state === 'hidden') {\n            setState(\"w-full h-screen\");\n            setLogo(true);\n        // values when closing the menu\n        } else {\n            setState('hidden');\n            setLogo(false);\n        }\n    }\n    \n  return (\n    <header\n    className={`${color ? 'bg-white' : 'bg-transparent'} w-full h-16 fixed z-50 flex justify-between shadow-md duration-150 backdrop-filter backdrop-blur-sm\n    md:h-14 lg:h-[5rem]`}>\n        \n        <div className=\"md:px-0 h-full w-full mx-4 flex justify-between items-center\">\n            {/* <!-- Medium resolution upwards contact info --> */}\n            <ul className={` ${mobileNavText ? 'text-black' : 'text-white'} hidden w-50 text-[0.8em]\n            md:flex md:flex-col md:w-[250px]`}>\n                <li className=\"py-1 flex\">\n                    <i className={`${icons ? 'bg-emailBlack' : 'bg-emailWhite'} bg-contain w-3 h-3 mt-[5px]`}></i>\n                    <a href=\"mailto:augustinas.pietaris@gmail.com\">\n                        <span className=\"mt-1 mx-3 md:text-[0.8em] md:mt-0\">augustinas.pietaris@gmail.com</span>\n                    </a>\n                </li>\n                <li className=\"py-1 flex md:-mt-2\">\n                    <i className={`${icons ? 'bg-phoneBlack' : 'bg-phoneWhite'} bg-contain w-3 h-3  mt-[5px]`}></i>\n                    <a href=\"tel:+37068716994\">\n                        <span className=\"mt-2 mx-3 md:text-[0.8em] md:mt-0\">+370 687 169 94</span>\n                    </a>\n                </li>\n            </ul>\n            {/*  */}\n\n            {/* <!-- Logo Here --> */}\n            <Link to={'/'} className={`${logo ? 'bg-logoBlack' : 'bg-logoWhite'} duration-300 h-9 w-36 bg-no-repeat bg-contain z-50 \n            md:w-[120px] md:h-[34px] \n            lg:w-[170px] lg:h-[55px]`}>\n            </Link>\n            \n\n            {/* <!-- medium resolution and upwards navigation --> */}\n            <ul className={` ${mobileNavText ? 'text-black' : 'text-white'} hidden mr-2 md:flex md:w-[250px] md:flex-col md:text-right`}>\n                <li>\n                    <a className=\"text-[0.7em]\" href=\"\">APIE MANE</a>\n                </li>\n                <li>\n                    <a className=\"text-[0.7em] relative top-[-6px]\">MANO DARBAI</a>\n                </li>\n            </ul>\n\n            {/* <!-- mobile menu links here --> */}\n            <div id=\"menu\" className={`absolute backdrop:fixed top-0 right-0 ${state}`}\n            >\n            <ul className=\"top-0 right-0 w-full h-screen py-16 z-50 font-bold flex flex-col justify-center bg-hero2 bg-left-top bg-no-repeat bg-[size:500px] overflow-hidden bg-blue bg-blend-luminosity\n                md:relative md:flex md:p-0 md:bg-transparent md:flex-row md:space-x-6 md:mt-4 md:w-[120px] md:text-right text-black\">\n\n                <li className=\"md:hidden fixed top-4 flex flex-col w-full justify-between px-4\">\n                    <button type=\"button\" className=\"text-right text-4xl mr-2 self-end -mt-2\"\n                        onClick={toggleMenu}>&times;</button>\n                </li>\n\n            <div className=\"px-8 -mt-16\">\n                <h1 className=\"text-2xl my-3 text-center font-futura\">NAVIGUOJAM!</h1>\n                <li className=\"mt-4 py-2 border-4 border-black flex justify-center bg-white\"><a className=\"text-md\" href=\"#\">APIE MANE</a></li>\n                <li className=\"mt-4 py-2 border-4 border-black flex justify-center bg-white\"><a className=\"text-md\" href=\"#\">MANO DARBAI</a></li>\n\n                <h1 className=\"text-2xl my-3 text-center pt-4 font-futura\">SUSISIEKIAM!</h1>\n                <ul>\n                    <li id=\"email\" className=\"py-2 border-4 border-black mt-4 flex justify-center bg-white\">\n                        <span className=\"block ml-0.5 mt-px h-6 w-6 bg-emailBlack bg-contain\" alt=\"email address\"/>\n                        <span className=\"mt-px mx-3\">augustinas@augis.lt</span>\n                    </li>\n                    <li id=\"phone\" className=\"py-2 border-4 border-black mt-4 flex justify-center bg-white\">\n                        <span className=\"block ml-0.5 mt-px h-6 w-6 bg-phoneBlack bg-contain\" alt=\"phone number\"/>\n                        <span className=\"mt-px mx-3\">+370 678 64 334</span>\n                    </li>\n                </ul>\n            </div>\n                \n            </ul>\n            </div>\n\n        <div className=\"flex md:hidden items-center z-96\">\n            <button className={` ${mobileNavButton ? 'text-black' : 'text-white'} text-4xl font-bold hover:opacity-100 duration-300 mb-3`}\n                onClick={() => {toggleMenu()}}>\n                &#9776;\n            </button>\n\n        </div>\n\n        </div>\n    </header>\n  );\n}\n\nexport default Header","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/hero.js",[],[],"/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/home_portfolio.js",["63","64","65"],[],"// import { useRef } from 'react';\nimport { Works } from '../data';\nimport { useState, useEffect, forwardRef } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nimport '../styles/main.css';\nimport '../styles/tailwind.css';\nimport React from 'react';\n\n// TO DO:\n//add hover styling\n\n// Have to use forward ref, because I can't pass the ref directly to the component in home.js\nconst HomePortfolio = React.forwardRef((props, ref) => {\n\n    // seperated works into two categories: digital and physical.\n    // two buttons will trigger whichever ones will be displayed \n    const [typeOfWork, setChangeWorkDisplay] = useState('physical');\n    const [selectedButton, setSelectedButton] = useState('physical');\n    const changeToPhysical = () => {\n        setChangeWorkDisplay('physical');\n        setSelectedButton('physical');\n    }\n    const changeToDigital = () => {\n        setChangeWorkDisplay('digital');\n        setSelectedButton('digital');\n    }\n\n    // completely genius function that last grid element to span 2 or 1 based on \n    // whether there is an equal amount of elements or not\n    let workItemCounter = 0;\n    const [gridElementsSpan, setGridElementsSpan] = useState(false);\n    useEffect(() => {\n        console.log('workItemCounter % 2 is ' + workItemCounter % 2);\n        if (workItemCounter % 2) {\n            setGridElementsSpan(true);\n            console.log('running setGridElementSpan(2)');\n        } else {\n            setGridElementsSpan(false);\n            console.log('running setGridElementSpan(1)');\n        }\n    }, [changeToPhysical, changeToDigital, workItemCounter]);\n\n    // this function triggers button style based on which ever one is active\n    const getClassNames = (selectedButton, buttonType) => {\n        if (selectedButton === buttonType) {\n          return 'border-black border-b-2 text-gray-800';\n        } else {\n          return 'border-transparent border-b-0 text-gray-400';\n        }\n      };\n\n      const navigate = useNavigate();\n      const navigateToWorkPage = (url) => {\n        navigate(`/workpage/${url}`);\n      };\n\n\n  return (\n    <section \n    ref={ref}\n    id=\"portfolio\" \n    className=\"flex flex-col justify-center\">\n        <h1 className=\"h-8 w-screen text-center text-xl mb-4 mt-[40px] font-futura font-bold\n        lg:mb-14 lg:mt-10\n        md:text-[2em] md:mb-10 md:mt-[20px]\n        \">PORTFOLIO</h1>\n        <div className='font-futura flex justify-around mb-6 text-sm \n        md:text-[1rem] md:justify-center'>\n            <button \n            onClick={changeToPhysical} \n            className={`${getClassNames(selectedButton, 'physical')} duration-200 md:px-3 md:pb-1`}>APČIUOPIAMI</button>\n\n            <button \n            onClick={changeToDigital} \n            className={`${getClassNames(selectedButton, 'digital')} duration-200 md:px-3 md:pb-1`}>SKAITMENINIAI</button>\n            </div>\n            <div className={`h-2/3 w-auto grid grid-rows-2 grid-cols-2 gap-4 mx-4\n            md:mx-20 md:grid-cols-[repeat(auto-fit,_minmax(0,1fr))] md:grid-rows-auto md:h-[60%]\n            lg:h-1/2 lg:grid-rows-1`}>\n\n            {\n            //typeOfWork is defined in the useState hook above. It returns a string, but [] converts it into an object property\n            Works\n            .filter((workItem) => workItem[typeOfWork])\n            .map((workItem) => {\n                workItemCounter++;\n            const img = {\n                backgroundImage: 'url(' + workItem.img1 + ')',\n            };\n\n            return (\n                <div \n                key={workItem.id}\n                className={`${gridElementsSpan ? 'last:col-span-2' : 'last:col-span-1'} md:last:col-span-1 md:row-span-2 cursor-pointer border-2 lg:border-[3px] border-black flex bg-cover bg-top`}\n                style={img}>\n            <button onClick={() => navigateToWorkPage(workItem.url)}\n            className=\"border-t-2 lg:border-t-[3px] border-black h-8 lg:h-12 w-full font-bold self-end bg-white text-xs \n            lg:text-base\">{workItem.title}</button>\n                </div>\n                \n            );\n        })}\n\n            </div>\n    </section>\n  );\n  \n})\nexport default HomePortfolio","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/data.js",[],[],"/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/pages/workpage.js",["66"],[],"import React from \"react\"\nimport { useLocation, useParams } from \"react-router-dom\";\nimport Header from \"../components/header\"\nimport WorkPreview from \"../components/workpreview\";\nimport { Works } from \"../data\";\n\n\n// TO DO:\n\n// make like a carousel thingie for displaying a single workItem. \n// below it you should still see the entire \"home_portfolio\" compontent, but it should say \"See others\" instead of \"PORTFOLIO\"\n//\n\nconst WorkPage = () => {\n\n    // captures the current URL as an object\n    const IDObject = useParams(useLocation());\n    // get id from the object, which is the 'url' property in data.js\n    const URLName = IDObject.id;\n    // map through the Works array and check what id property that element has. \n    // set that id property to the array index that we're targetting and store that element in workItem\n    let workItem;\n    Works.map((item)=> {\n        if (URLName === item.url) {\n            workItem = Works[item.id - 1];\n        }\n    },)\n    \n    //function to check how many images the array object has\n    const sumOfImages = (workItem) => {\n        const sum = Object.keys(workItem).filter((key) => key.startsWith(\"img\"));\n        return sum.length;\n    }\n    const imgTotal = sumOfImages(workItem);\n\n    //function to loop through all the images, add them to a div and push them out to the parent div\n    let img;\n    let images = [];\n    const loopImages = (workItem) => {\n    for (let i = 0; i < imgTotal; i++) {\n        img = { backgroundImage: `url(${workItem[`img${i + 1}`]})` };\n        images.push(\n            <div style={img} className={`bg-cover bg-top h-full mt-2`} key={i}>\n                <p className=\"font-helvetica text-[0.7em] p-4 text-white\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam</p>\n            </div>\n        );\n    }\n\n    return images;\n    }\n\n\n\n  return (\n    <>\n    <Header />\n    <section className=\"h-screen w-full flex flex-col px-6 justify-center\">\n        <div className=\"h-2/3 w-full\">\n            <div className=\"flex justify-between\">\n                <h1 className=\"font-futura\">{workItem.title}</h1>\n                <h2 className=\"\">{workItem.year}</h2>\n            </div>\n            {loopImages(workItem)}\n            <div className=\"pb-6 bottom-0\"></div>\n            <WorkPreview/>\n        </div>\n\n        {/* <HomePortfolio /> */}\n\n\n    </section>\n    </>\n  )\n}\nexport default WorkPage\n\n","/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/home.js",[],[],"/Users/kietasbicas/Documents/learn web dev/react-augio-portfolio/src/components/workpreview.js",["67","68","69"],[],"import { Works } from \"../data\"\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\n\n\nconst WorkPreview = () => {\n\n// seperated works into two categories: digital and physical.\n// two buttons will trigger whichever ones will be displayed \nconst [typeOfWork, setChangeWorkDisplay] = useState('physical');\nconst [selectedButton, setSelectedButton] = useState('physical');\nconst changeToPhysical = () => {\n    setChangeWorkDisplay('physical');\n    setSelectedButton('physical');\n}\nconst changeToDigital = () => {\n    setChangeWorkDisplay('digital');\n    setSelectedButton('digital');\n}\n\n// this function triggers button style based on which ever one is active\nconst getClassNames = (selectedButton, buttonType) => {\n    if (selectedButton === buttonType) {\n        return 'border-black border-b-2 text-gray-800';\n    } else {\n        return 'border-transparent border-b-0 text-gray-400';\n    }\n};\n\nlet workItemCounter = 0;\n\nconst [gridToggler, setGridToggler] = useState(false);\nuseEffect(() => {\n    console.log('workItemCounter % 2 is ' + workItemCounter % 2);\n    if (workItemCounter % 2) {\n        setGridToggler(true);\n        console.log('running setGridElementSpan(2)');\n    } else {\n        setGridToggler(false);\n        console.log('running setGridElementSpan(1)');\n    }\n}, [changeToPhysical, changeToDigital, workItemCounter]);\n\n\n// if 3 = 1 rows / 3 cols\n// if 4 = 2 rows / 2 cols\n// if 5 = 3 rows / 2 cols /last span 3\n// if 6 = 2 rows / 3 cols \n\n// set use state to number values. \n// use if (or switch) statements for every numOfItems up to 8\n// ( example: if workItemCounter === 3 then set setGridToggler(3))\n\n// then in the div classname set ${gridToggler ? 'grid-rows-1' : 'grid-rows-2'} \n\n\n  return (\n    <div className=\"h-auto w-full pb-6\">\n    <h1 className=\"font-futura text-center\">Žiūrėti kitus:</h1>\n        <div className=\"flex justify-evenly font-futura text-[0.7em] mt-2\">\n            <button \n            onClick={changeToPhysical} \n            className={`${getClassNames(selectedButton, 'physical')} duration-200 md:px-3 md:pb-1`}>APČIUOPIAMI</button>\n\n            <button \n            onClick={changeToDigital} \n            className={`${getClassNames(selectedButton, 'digital')} duration-200 md:px-3 md:pb-1`}>SKAITMENINIAI</button>\n        </div>\n\n{/* try to fix thissssss gridToggler*/}\n        <div className={`${gridToggler ? 'grid-rows-1' : 'grid-rows-2'} ${gridToggler ? 'col-span-1' : 'col-span-2'} grid grid-cols-3 w-full justify-evenly mt-4 gap-2 h-[200px]`}>\n        {Works.\n        filter((workItem) => workItem[typeOfWork])\n        .map((workItem) => {\n        workItemCounter++;\n        console.log(workItemCounter);\n        const img = {\n            backgroundImage: 'url(' + workItem.img1 + ')',\n        };\n            return (\n                <div \n                key={workItem.id} \n                style={img} \n                className={`h-30 bg-cover bg-center border-black border-[2px]`}></div>\n            )\n        })}\n        </div>\n    </div>\n  )\n}\nexport default WorkPreview",{"ruleId":"70","severity":1,"message":"71","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"70","severity":1,"message":"74","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":12},{"ruleId":"70","severity":1,"message":"75","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":21},{"ruleId":"70","severity":1,"message":"76","line":5,"column":9,"nodeType":"72","messageId":"73","endLine":5,"endColumn":14},{"ruleId":"70","severity":1,"message":"77","line":5,"column":22,"nodeType":"72","messageId":"73","endLine":5,"endColumn":28},{"ruleId":"78","severity":1,"message":"79","line":44,"column":7,"nodeType":"72","endLine":44,"endColumn":16,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":105,"column":21,"nodeType":"83","endLine":105,"endColumn":57},{"ruleId":"81","severity":1,"message":"84","line":108,"column":21,"nodeType":"83","endLine":108,"endColumn":69},{"ruleId":"81","severity":1,"message":"82","line":125,"column":94,"nodeType":"83","endLine":125,"endColumn":126},{"ruleId":"81","severity":1,"message":"82","line":126,"column":94,"nodeType":"83","endLine":126,"endColumn":126},{"ruleId":"70","severity":1,"message":"85","line":3,"column":31,"nodeType":"72","messageId":"73","endLine":3,"endColumn":41},{"ruleId":"78","severity":1,"message":"86","line":20,"column":11,"nodeType":"87","endLine":23,"endColumn":6,"suggestions":"88"},{"ruleId":"78","severity":1,"message":"89","line":24,"column":11,"nodeType":"87","endLine":27,"endColumn":6,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":23,"column":21,"nodeType":"93","messageId":"94","endLine":23,"endColumn":23},{"ruleId":"78","severity":1,"message":"95","line":13,"column":7,"nodeType":"87","endLine":16,"endColumn":2,"suggestions":"96"},{"ruleId":"78","severity":1,"message":"97","line":17,"column":7,"nodeType":"87","endLine":20,"endColumn":2,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":73,"column":15,"nodeType":"101","messageId":"102","endLine":73,"endColumn":16,"fix":"103"},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Hero' is defined but never used.","'HomePortfolio' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setColor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [URL] as a second argument to the useEffect Hook.",["104"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'forwardRef' is defined but never used.","The 'changeToPhysical' function makes the dependencies of useEffect Hook (at line 42) change on every render. To fix this, wrap the definition of 'changeToPhysical' in its own useCallback() Hook.","VariableDeclarator",["105"],"The 'changeToDigital' function makes the dependencies of useEffect Hook (at line 42) change on every render. To fix this, wrap the definition of 'changeToDigital' in its own useCallback() Hook.",["106"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","The 'changeToPhysical' function makes the dependencies of useEffect Hook (at line 43) change on every render. To fix this, wrap the definition of 'changeToPhysical' in its own useCallback() Hook.",["107"],"The 'changeToDigital' function makes the dependencies of useEffect Hook (at line 43) change on every render. To fix this, wrap the definition of 'changeToDigital' in its own useCallback() Hook.",["108"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"109","text":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"113","fix":"117"},{"desc":"115","fix":"118"},[2532,2542],"\n        .","Add dependencies array: [URL]",{"range":"119","text":"120"},"Wrap the definition of 'changeToPhysical' in its own useCallback() Hook.",{"range":"121","text":"122"},"Wrap the definition of 'changeToDigital' in its own useCallback() Hook.",{"range":"123","text":"124"},{"range":"125","text":"126"},{"range":"127","text":"128"},[1775,1775],", [URL]",[747,841],"useCallback(() => {\n        setChangeWorkDisplay('physical');\n        setSelectedButton('physical');\n    })",[870,962],"useCallback(() => {\n        setChangeWorkDisplay('digital');\n        setSelectedButton('digital');\n    })",[413,495],"useCallback(() => {\n    setChangeWorkDisplay('physical');\n    setSelectedButton('physical');\n})",[520,600],"useCallback(() => {\n    setChangeWorkDisplay('digital');\n    setSelectedButton('digital');\n})"]